rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ヘルパー関数: 管理者かどうかをチェック
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // ヘルパー関数: データの所有者かどうかをチェック
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // usersコレクションのルール
    match /users/{userId} {
      // 一般ユーザーは自分の情報を読み取りと作成のみ可能（更新不可）
      allow read, create: if isOwner(userId);
      // 管理者は全ユーザーの情報を読み書き可能
      allow read, write: if isAdmin();
    }
    
    // feedbackコレクションのルール
    match /feedback/{document} {
      // 読み取り: 全ユーザー（改善要望は公開）
      allow read: if request.auth != null;
      // 作成: 自分のみ
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 更新: 自分の投稿のみ、または投票機能（votersフィールドの更新のみ）
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['votes', 'voters', 'updatedAt'])));
      // 削除: 自分の投稿のみ
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // goalsコレクションのルール
    match /goals/{document} {
      // 読み取り: 自分の目標のみ
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 作成: 自分のみ
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 更新: 自分の目標のみ
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 削除: 自分の目標のみ
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // savingsコレクションのルール
    match /savings/{document} {
      // 読み取り: 自分の明細のみ
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 作成: 自分のみ
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 更新: 自分の明細のみ
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 削除: 自分の明細のみ
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
} 